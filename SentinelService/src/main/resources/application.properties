server.port=8086

spring.application.name=sentinelService

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
eureka.client.service-url.defaultZone=http://localhost:11111/eureka/
eureka.client.instance-info-replication-interval-seconds=1
eureka.client.registry-fetch-interval-seconds=1
eureka.instance.lease-renewal-interval-in-seconds=1
eureka.instance.lease-expiration-duration-in-seconds=15

#开启openFeign对sentinel的整合
feign.sentinel.enabled=true

#sentinel dashboard地址
spring.cloud.sentinel.transport.dashboard=localhost:8088
spring.cloud.sentinel.transport.client-ip=10.10.3.68
#指定应用与Sentinel控制台交互的端口，应用本地会起一个该端口占用的HttpServer
spring.cloud.sentinel.transport.port=8719
sentinelGroup=SENTINEL_GROUP


spring.cloud.nacos.config.server-addr=localhost:8848
spring.cloud.nacos.config.namespace=public
spring.cloud.nacos.config.username=nacos
spring.cloud.nacos.config.password=nacos


spring.cloud.sentinel.datasource.ds.nacos.serverAddr=${spring.cloud.nacos.config.server-addr}
spring.cloud.sentinel.datasource.ds.nacos.namespace=${spring.cloud.nacos.config.namespace}
spring.cloud.sentinel.datasource.ds.nacos.dataId=${spring.application.name}-flow-rules
spring.cloud.sentinel.datasource.ds.nacos.groupId=${sentinelGroup}
spring.cloud.sentinel.datasource.ds.nacos.data-type=json
spring.cloud.sentinel.datasource.ds.nacos.rule-type=flow
spring.cloud.sentinel.datasource.ds.nacos.username=${spring.cloud.nacos.config.username}
spring.cloud.sentinel.datasource.ds.nacos.password=${spring.cloud.nacos.config.password}



